{
    "pipes": [
        {
            "name": "WithCategoryPipe",
            "id": "pipe-WithCategoryPipe-d1378727e1260d0ddf3ff342dca28c7ff3960a38f13d7994e0875609b875a72699a8a312e64accfb239d77a4d958fac6fadd0645704bbc06d9a1e6fd91749c57",
            "file": "src/app/pipes/with-category.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "items",
                            "type": "WishlistItem[] | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "category",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "WishlistItem[]",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "WishlistItem[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "category",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "withCategory",
            "sourceCode": "import { NgIterable, Pipe, PipeTransform } from '@angular/core';\nimport { WishlistItem } from '../business/item';\n\n@Pipe({\n  name: 'withCategory',\n})\nexport class WithCategoryPipe implements PipeTransform {\n  transform(\n    items: WishlistItem[] | null,\n    category: string | null\n  ): WishlistItem[] {\n    if (items && items.length) {\n      if (category === null) {\n        return items;\n      }\n      return items.filter((item) => item.Category === category);\n    }\n    return [];\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "AddItemResponse",
            "id": "interface-AddItemResponse-2b6489df8d4409f7cca76bca2f8dcaba7f292ea8d46efe19352d0c48fa35eb5e814e980c1eca634a432c431f8481a19b60c42eaec5bca15bf2739e9fda915d2a",
            "file": "src/app/business/add-item-response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AddItemResponse {\n  message: string;\n  id?: number;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppGlobalState",
            "id": "interface-AppGlobalState-5396f36f199abf06a32055c33ca6197838abc03124e4236501d6c99cd3e183c4fa182c60befabb729dd48909940383c05d83ee291e7764e59f8361410e59f3af",
            "file": "src/app/store/a.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nexport interface AppGlobalState {\n  pendingRequest: boolean;\n  requestErrorText: string | null;\n  requestRetryAction: Action | null;\n  captchaRequest: string | null;\n}\n",
            "properties": [
                {
                    "name": "captchaRequest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "pendingRequest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "requestErrorText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "requestRetryAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Action | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppState",
            "id": "interface-AppState-04a4baa98dd5295537ab806cf95c63c9ea07bffe33be8a7740035f75a4244efb0f0354b31add1269253418ff185b7f4bfdbeb7bacc7982019be95f631ae1e805",
            "file": "src/app/store/app.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AppGlobalState } from './a.state';\nimport { ReservationState } from './r.state';\nimport { WishlistState } from './w.state';\n\nexport interface AppState {\n  ag: AppGlobalState;\n  wishlist: WishlistState;\n  reservation: ReservationState;\n}\n",
            "properties": [
                {
                    "name": "ag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppGlobalState",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "reservation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReservationState",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "wishlist",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WishlistState",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ReservationState",
            "id": "interface-ReservationState-9f9f1cb10005b9c8353b75f71e441a2ff4ec73710792a55c09dc7ef7cae89ddae2312216928dedd3bbd868bdca89b36d37b2eaf03f4fdf28ff278157cffc9592",
            "file": "src/app/store/r.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type ReservationStatus =\n  | 'unknown'\n  | 'requestPending'\n  | 'reserved'\n  | 'free'\n  | 'updateFailed';\n\nexport interface ReservationState {\n  itemid: number | null;\n  status: ReservationStatus;\n  errorText: string | null;\n}\n",
            "properties": [
                {
                    "name": "errorText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "itemid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReservationStatus",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "WishlistItem",
            "id": "interface-WishlistItem-fccc03d73c025785804af7d1ecb3fdf6bb6da6f5e6c356ee5376e1690a82d28d0f7f2b559b686411cc47c8913789ccf94e3f79ac6171b8ccfa18311df226b99a",
            "file": "src/app/business/item.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface WishlistItem {\n  id: number;\n  Title: string;\n  Description: string;\n  ImgageUrl: string;\n  BuyUrl: string;\n  Category: string;\n};\n",
            "properties": [
                {
                    "name": "BuyUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "Category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "ImgageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "WishlistState",
            "id": "interface-WishlistState-1d8bf435f543aa50751a3e7f8ac9f6269cee8b2c7b95b5aa031c2f7814ac144321e6ddfb80fdacdf01b3f44ef3d20479c55e6d08dda67441495fa386297b9d93",
            "file": "src/app/store/w.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { WishlistItem } from '../business/item';\n\nexport interface WishlistState {\n  /** All existing categories */\n  categories: string[];\n  /** A known items */\n  items: WishlistItem[];\n  activeItem: WishlistItem | null;\n}\n",
            "properties": [
                {
                    "name": "activeItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WishlistItem | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "<p>All existing categories</p>\n",
                    "line": 5,
                    "rawdescription": "\nAll existing categories"
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WishlistItem[]",
                    "optional": false,
                    "description": "<p>A known items</p>\n",
                    "line": 7,
                    "rawdescription": "\nA known items"
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ItemsService",
            "id": "injectable-ItemsService-7766ddc85b8c1ca9e846d0c4bcf5104856f17099964f9c70dfc6a53fa9676261067bad9e616994adce99d6bb35e9504e42881c87f1c5e53f99c2be8e82749372",
            "file": "src/app/services/items.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "WishlistItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "captchaAnswer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Result<AddItemResponse>>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "WishlistItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "captchaAnswer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteItem",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "captchaAnswer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Result<string>>",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "captchaAnswer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCaptchaChallenge",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Result<string>>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getItems",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<WishlistItem[]>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getReservationFlag",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "WishlistItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "captchaAnswer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Result<string>>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "WishlistItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "captchaAnswer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setReservationFlag",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "flag",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "captchaAnswer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Result<string>>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flag",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "captchaAnswer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, map, Observable } from 'rxjs';\nimport { AddItemResponse } from '../business/add-item-response';\nimport { WishlistItem } from '../business/item';\nimport { Result } from '../business/result';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemsService {\n  constructor(private http: HttpClient) {}\n\n  public getItems(): Observable<WishlistItem[]> {\n    return this.http\n      .get<{ data: WishlistItem[] }>('localservice.php?action=list')\n      .pipe(map((d) => d.data));\n  }\n\n  public getReservationFlag(id: number): Observable<boolean> {\n    return EMPTY;\n  }\n\n  public setReservationFlag(\n    id: number,\n    flag: boolean,\n    captchaAnswer: string\n  ): Observable<Result<string>> {\n    return EMPTY;\n  }\n\n  public setItem(\n    item: WishlistItem,\n    captchaAnswer: string\n  ): Observable<Result<string>> {\n    return EMPTY;\n  }\n\n  public addItem(\n    item: WishlistItem,\n    captchaAnswer: string\n  ): Observable<Result<AddItemResponse>> {\n    return EMPTY;\n  }\n\n  public deleteItem(\n    id: number,\n    captchaAnswer: string\n  ): Observable<Result<string>> {\n    return EMPTY;\n  }\n\n  public getCaptchaChallenge(): Observable<Result<string>> {\n    return EMPTY;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "WishlistEffects",
            "id": "injectable-WishlistEffects-111a41930e062cce39a36f3a14f20801691b66847c5ad64fa8c905df9be7240934202606f80e4b204dce40069ec962721aa41e5be573a976377f8771210a191d",
            "file": "src/app/store/w.effects.ts",
            "properties": [
                {
                    "name": "getItems$",
                    "defaultValue": "createEffect(() => {\n    return this.actions$.pipe(\n      ofType(getItems),\n      switchMap((initialAction) =>\n        this.itemsService.getItems().pipe(\n          map((items) => itemsLoaded({ items })),\n          catchError((err) => {\n            return of(\n              requestFailure({\n                errorText: 'Fehler beim Laden der Einträge',\n                errorDetails: err.message,\n                retryAction: initialAction,\n              })\n            );\n          })\n        )\n      )\n    );\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "init$",
                    "defaultValue": "createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ROOT_EFFECTS_INIT),\n      map((_) => getItems())\n    );\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "navigateToCategory$",
                    "defaultValue": "createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(goToCategory),\n        tap((d) => {\n          this.router.navigate(['/wunschliste', d.category]);\n        })\n      );\n    },\n    { dispatch: false }\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "navigateToItem$",
                    "defaultValue": "createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(goToItem),\n        tap((d) => {\n          this.router.navigate(['/wunsch', `${d.itemId}`]);\n        })\n      );\n    },\n    { dispatch: false }\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { Router } from '@angular/router';\nimport {\n  Actions,\n  createEffect,\n  ofType,\n  ROOT_EFFECTS_INIT,\n} from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { ItemsService } from '../services/items.service';\nimport { requestFailure } from './a.actions';\nimport { getItems, goToCategory, goToItem, itemsLoaded } from './w.actions';\n\n@Injectable()\nexport class WishlistEffects {\n  init$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ROOT_EFFECTS_INIT),\n      map((_) => getItems())\n    );\n  });\n\n  getItems$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(getItems),\n      switchMap((initialAction) =>\n        this.itemsService.getItems().pipe(\n          map((items) => itemsLoaded({ items })),\n          catchError((err) => {\n            return of(\n              requestFailure({\n                errorText: 'Fehler beim Laden der Einträge',\n                errorDetails: err.message,\n                retryAction: initialAction,\n              })\n            );\n          })\n        )\n      )\n    );\n  });\n\n  navigateToCategory$ = createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(goToCategory),\n        tap((d) => {\n          this.router.navigate(['/wunschliste', d.category]);\n        })\n      );\n    },\n    { dispatch: false }\n  );\n\n  navigateToItem$ = createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(goToItem),\n        tap((d) => {\n          this.router.navigate(['/wunsch', `${d.itemId}`]);\n        })\n      );\n    },\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private itemsService: ItemsService,\n    private router: Router\n  ) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "itemsService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 65,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "itemsService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ActivatedRouteStub",
            "id": "class-ActivatedRouteStub-4e6c13b40da2ac7377c81aee47195aef7e5e1b202aed498095545bbc56ab9b1484d22c4f355a6ebff40c534cb2c073795b48bd79186b5dceb6585f3724ef2162",
            "file": "testing/activated-route-stub.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { convertToParamMap, ParamMap, Params } from '@angular/router';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * An ActivateRoute test double with a `paramMap` observable.\n * Use the `setParamMap()` method to add the next `paramMap` value.\n */\nexport class ActivatedRouteStub {\n  // Use a ReplaySubject to share previous values with subscribers\n  // and pump new values into the `paramMap` observable\n  private subject = new ReplaySubject<ParamMap>();\n\n  constructor(initialParams?: Params) {\n    this.setParamMap(initialParams);\n  }\n\n  /** The mock paramMap observable */\n  readonly paramMap = this.subject.asObservable();\n\n  /** Set the paramMap observable's next value */\n  setParamMap(params: Params = {}) {\n    this.subject.next(convertToParamMap(params));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "initialParams",
                        "type": "Params",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "initialParams",
                        "type": "Params",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "paramMap",
                    "defaultValue": "this.subject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The mock paramMap observable</p>\n",
                    "line": 18,
                    "rawdescription": "\nThe mock paramMap observable",
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "subject",
                    "defaultValue": "new ReplaySubject<ParamMap>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "description": "<p>An ActivateRoute test double with a <code>paramMap</code> observable.\nUse the <code>setParamMap()</code> method to add the next <code>paramMap</code> value.</p>\n",
            "rawdescription": "\n\nAn ActivateRoute test double with a `paramMap` observable.\nUse the `setParamMap()` method to add the next `paramMap` value.\n",
            "methods": [
                {
                    "name": "setParamMap",
                    "args": [
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet the paramMap observable's next value",
                    "description": "<p>Set the paramMap observable&#39;s next value</p>\n",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "Params",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppStateBuilder",
            "id": "class-AppStateBuilder-42f93e2bc2490f0ef01b59e96c1fef8b1e9f30bb03f153efe0394bb7e1c2e84cbd71db61945156021909a79e04f7cc4926345c26a7ba4c4cc0863e91c0bc6605",
            "file": "testing/app.state.builder.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nimport { WishlistItem } from 'src/app/business/item';\nimport { AppGlobalState } from 'src/app/store/a.state';\nimport { AppState } from 'src/app/store/app.state';\nimport { ReservationState, ReservationStatus } from 'src/app/store/r.state';\nimport { WishlistState } from 'src/app/store/w.state';\nimport { ListBuilder } from './list-builder';\nimport { randomString } from './utils';\n\nexport const appStateStub = (): AppStateBuilder => new AppStateBuilder();\n\nexport class AppStateBuilder implements AppState {\n  ag: AppGlobalState = {\n    captchaRequest: 'Sieben plus zwei',\n    pendingRequest: false,\n    requestErrorText: null,\n    requestRetryAction: null,\n  };\n  wishlist: WishlistState = {\n    categories: [],\n    items: [],\n    activeItem: null,\n  };\n  reservation: ReservationState = {\n    itemid: null,\n    status: 'unknown',\n    errorText: null,\n  };\n\n  public static hasError(errorText: string): AppStateBuilder {\n    const b = new AppStateBuilder();\n    b.ag.requestErrorText = errorText;\n    return b;\n  }\n\n  public withRetryAction(retryAction: Action): AppStateBuilder {\n    this.ag.requestRetryAction = retryAction;\n    return this;\n  }\n\n  public static givenCategories(...categories: string[]): AppStateBuilder {\n    const b = new AppStateBuilder();\n    b.wishlist.categories = [...categories];\n    return b;\n  }\n\n  public static someCategories(): AppStateBuilder {\n    const b = new AppStateBuilder();\n    b.wishlist.categories = ListBuilder.with((i) =>\n      randomString(8, 'Category ')\n    )\n      .items(7)\n      .build();\n    return b;\n  }\n\n  public static pendingRequest(): AppStateBuilder {\n    const b = new AppStateBuilder();\n    b.ag.pendingRequest = true;\n    return b;\n  }\n\n  public static hasActiveItem(values?: Partial<WishlistItem>): AppStateBuilder {\n    const b = new AppStateBuilder();\n    return b.withActiveItem(values);\n  }\n\n  public static reservationStatus(\n    status: ReservationStatus,\n    opt?: { errorText?: string }\n  ): AppStateBuilder {\n    const b = new AppStateBuilder();\n    b.reservation.status = status;\n    b.reservation.errorText = opt?.errorText || null;\n    return b;\n  }\n\n  public static withBookCategoryAndItems(): AppStateBuilder {\n    const b = AppStateBuilder.givenCategories('Buch')\n      .withItem({\n        id: 8,\n        Title: 'Schillers Glocke',\n        Description:\n          'Das Lied von der Glocke ist ein im Jahr 1799 von Friedrich Schiller veröffentlichtes Gedicht. Es gehörte lange Zeit zum Kanon der deutschen Literatur und ist eines der bekanntesten, am meisten zitierten und parodierten deutschen Gedichte.',\n        BuyUrl: 'https://de.wikipedia.org/wiki/Das_Lied_von_der_Glocke',\n        Category: 'Buch',\n        ImgageUrl:\n          'https://upload.wikimedia.org/wikipedia/commons/6/69/Liezen_Prachteinband_Schillers_Glocke_01.jpg',\n      })\n      .withItem({\n        Title: 'Faust I + II',\n        Category: 'Buch',\n        Description: `Mit Goethes Faust wird Johann Wolfgang von Goethes Bearbeitung des\n      Fauststoffs bezeichnet. Der Begriff kann sich auf den ersten Teil der\n      durch Goethe geschaffenen Tragödie, auf deren ersten und zweiten Teil\n      gemeinsam oder insgesamt auf die Arbeiten am Fauststoff beziehen, die\n      Goethe durch sechzig Jahre hindurch immer wieder neu aufnahm. Er umfasst\n      in diesem letzteren Sinne auch die Entwürfe, Fragmente, Kommentare und\n      Paralipomena des Dichters zu seinem Faustwerk und zum Fauststoff.`,\n        BuyUrl: 'https://de.wikipedia.org/wiki/Goethes_Faust',\n        ImgageUrl:\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/Kersting_-_Faust_im_Studierzimmer.jpg/220px-Kersting_-_Faust_im_Studierzimmer.jpg',\n        id: 19,\n      })\n      .withItem({\n        id: 41,\n        Title: 'Nathan der Weise',\n        Description:\n          'Nathan der Weise ist der Titel und die Hauptfigur eines fünfaktigen Ideendramas von Gotthold Ephraim Lessing, das 1779 veröffentlicht und am 14. April 1783 in Berlin uraufgeführt wurde. Das Werk hat als Themenschwerpunkte den Humanismus und den Toleranzgedanken der Aufklärung. Besonders berühmt wurde die Ringparabel im dritten Aufzug des Dramas.',\n        BuyUrl: 'https://de.wikipedia.org/wiki/Nathan_der_Weise',\n        Category: 'Buch',\n        ImgageUrl: '',\n      });\n    return b;\n  }\n\n  withActiveItem(values?: Partial<WishlistItem>): AppStateBuilder {\n    this.wishlist.activeItem = {\n      Title: 'Faust I + II',\n      Category: 'Buch',\n      Description: `Mit Goethes Faust wird Johann Wolfgang von Goethes Bearbeitung des\n      Fauststoffs bezeichnet. Der Begriff kann sich auf den ersten Teil der\n      durch Goethe geschaffenen Tragödie, auf deren ersten und zweiten Teil\n      gemeinsam oder insgesamt auf die Arbeiten am Fauststoff beziehen, die\n      Goethe durch sechzig Jahre hindurch immer wieder neu aufnahm. Er umfasst\n      in diesem letzteren Sinne auch die Entwürfe, Fragmente, Kommentare und\n      Paralipomena des Dichters zu seinem Faustwerk und zum Fauststoff.`,\n      BuyUrl: 'https://de.wikipedia.org/wiki/Goethes_Faust',\n      ImgageUrl:\n        'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/Kersting_-_Faust_im_Studierzimmer.jpg/220px-Kersting_-_Faust_im_Studierzimmer.jpg',\n      id: 1,\n      ...values,\n    };\n    return this;\n  }\n\n  withCaptcha(challenge: string): AppStateBuilder {\n    this.ag.captchaRequest = challenge;\n    return this;\n  }\n\n  withItem(item: WishlistItem): AppStateBuilder {\n    this.wishlist.items.push(item);\n    if (!this.wishlist.categories.includes(item.Category)) {\n      this.wishlist.categories.push(item.Category);\n    }\n    return this;\n  }\n}\n",
            "properties": [
                {
                    "name": "ag",
                    "defaultValue": "{\n    captchaRequest: 'Sieben plus zwei',\n    pendingRequest: false,\n    requestErrorText: null,\n    requestRetryAction: null,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppGlobalState",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "reservation",
                    "defaultValue": "{\n    itemid: null,\n    status: 'unknown',\n    errorText: null,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReservationState",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "wishlist",
                    "defaultValue": "{\n    categories: [],\n    items: [],\n    activeItem: null,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WishlistState",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [
                {
                    "name": "givenCategories",
                    "args": [
                        {
                            "name": "categories",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "categories",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasActiveItem",
                    "args": [
                        {
                            "name": "values",
                            "type": "Partial<WishlistItem>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "Partial<WishlistItem>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasError",
                    "args": [
                        {
                            "name": "errorText",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "errorText",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pendingRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "reservationStatus",
                    "args": [
                        {
                            "name": "status",
                            "type": "ReservationStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "opt",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "ReservationStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "opt",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "someCategories",
                    "args": [],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "withActiveItem",
                    "args": [
                        {
                            "name": "values",
                            "type": "Partial<WishlistItem>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "Partial<WishlistItem>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "withBookCategoryAndItems",
                    "args": [],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "withCaptcha",
                    "args": [
                        {
                            "name": "challenge",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "challenge",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "withItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "WishlistItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "WishlistItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "withRetryAction",
                    "args": [
                        {
                            "name": "retryAction",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AppStateBuilder",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "retryAction",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "AppState"
            ]
        },
        {
            "name": "ListBuilder",
            "id": "class-ListBuilder-13ae2b07584874bdcee222aca169324453cea782173e22094bdc836c558d2cfe5ae1daac41c97b9912ca1b8064c91ffcd7da23a52aef03d54f9886343b67beb4",
            "file": "testing/list-builder.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ListBuilder<T> {\n  private count = 1;\n\n  static with<T>(generator: (index: number) => T): ListBuilder<T> {\n    return new ListBuilder(generator);\n  }\n\n  constructor(private generator: (index: number) => T) { }\n\n  public items(count: number): ListBuilder<T> {\n    this.count = count;\n    return this;\n  }\n\n  public build(): T[] {\n    const r = [];\n    for (let i = 0; i < this.count; i++) {\n      r.push(this.generator(i));\n    }\n\n    return r;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "generator",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "index",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ]
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "generator",
                        "type": "function",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "function": [
                            {
                                "name": "index",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "count",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "build",
                    "args": [],
                    "optional": false,
                    "returnType": "T[]",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "items",
                    "args": [
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ListBuilder<T>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "with",
                    "args": [
                        {
                            "name": "generator",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "index",
                                    "type": "number",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "ListBuilder<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "generator",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "index",
                                    "type": "number",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Result",
            "id": "class-Result-637567a3846f18f466b8ccdbba049c4c3f2a99fe67809fb7a50c70069a5e7c1a9ae1bf8d05120142acb38be17c36b919b4288ca168cd2a7f57ce233ed7db7f36",
            "file": "src/app/business/result.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Result<T> {\n  constructor(public readonly data: T, public readonly success = true) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "success",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "true"
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "success",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "true",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "success",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WishlistItemBuilder",
            "id": "class-WishlistItemBuilder-a4343f4d2c1e3ac708282a44bda7209692eaea77cdd3f238807227817be7714f3ca8bb11bc50ba630fc5ecb73898e848fa40b5140aa20ae3aaa52266e7061481",
            "file": "testing/item.builder.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { WishlistItem } from 'src/app/business/item';\nimport { randomNumber, randomString } from './utils';\n\nexport class WishlistItemBuilder {\n  id = randomNumber(900);\n  title = randomString(8, 'title ');\n  description = randomString(30, 'description ');\n  image_url = randomString(8, 'image ');\n  shopping_url = randomString(8, 'shop ');\n  category = randomString(8, 'category ');\n\n  static n() {\n    return new WishlistItemBuilder();\n  }\n\n  static default() {\n    return WishlistItemBuilder.n().build();\n  }\n\n  static faust(): WishlistItem {\n    return {\n      Title: 'Faust I + II',\n      Category: 'Buch',\n      Description: `Mit Goethes Faust wird Johann Wolfgang von Goethes Bearbeitung des\n      Fauststoffs bezeichnet. Der Begriff kann sich auf den ersten Teil der\n      durch Goethe geschaffenen Tragödie, auf deren ersten und zweiten Teil\n      gemeinsam oder insgesamt auf die Arbeiten am Fauststoff beziehen, die\n      Goethe durch sechzig Jahre hindurch immer wieder neu aufnahm. Er umfasst\n      in diesem letzteren Sinne auch die Entwürfe, Fragmente, Kommentare und\n      Paralipomena des Dichters zu seinem Faustwerk und zum Fauststoff.`,\n      BuyUrl: 'https://de.wikipedia.org/wiki/Goethes_Faust',\n      ImgageUrl:\n        'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/Kersting_-_Faust_im_Studierzimmer.jpg/220px-Kersting_-_Faust_im_Studierzimmer.jpg',\n      id: 42_872,\n    };\n  }\n\n  withCategory(category: string) {\n    this.category = category;\n    return this;\n  }\n\n  withId(id: number) {\n    this.id = id;\n    return this;\n  }\n\n  build(): WishlistItem {\n    return {\n      id: this.id,\n      Title: this.title,\n      Description: this.description,\n      ImgageUrl: this.image_url,\n      BuyUrl: this.shopping_url,\n      Category: this.category,\n    };\n  }\n}\n",
            "properties": [
                {
                    "name": "category",
                    "defaultValue": "randomString(8, 'category ')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "defaultValue": "randomString(30, 'description ')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "defaultValue": "randomNumber(900)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "image_url",
                    "defaultValue": "randomString(8, 'image ')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "shopping_url",
                    "defaultValue": "randomString(8, 'shop ')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "defaultValue": "randomString(8, 'title ')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [
                {
                    "name": "build",
                    "args": [],
                    "optional": false,
                    "returnType": "WishlistItem",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "default",
                    "args": [],
                    "optional": false,
                    "returnType": "WishlistItem",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "faust",
                    "args": [],
                    "optional": false,
                    "returnType": "WishlistItem",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "n",
                    "args": [],
                    "optional": false,
                    "returnType": "WishlistItemBuilder",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "withCategory",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "this",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "withId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "this",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ConnectFormDirective",
            "id": "directive-ConnectFormDirective-0ffed70a5754e9d1356768ba715c2d390d94c46078ad877fdc6bab07ef90e50423aaf80b60e4af190d49c73913d6dec4e862a1312c9e1f0b9d604b2b35bd4aa6",
            "file": "src/app/directives/connect-form.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { FormGroupDirective } from '@angular/forms';\n\n@Directive({\n  selector: '[appConnectForm]',\n})\nexport class ConnectFormDirective {\n  @Input('appConnectForm')\n  set data(val: any) {\n    if (val) {\n      this.formGroupDirective.form.patchValue(val);\n      this.formGroupDirective.form.markAsPristine();\n    }\n  }\n  constructor(private formGroupDirective: FormGroupDirective) {}\n}\n",
            "selector": "[appConnectForm]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "appConnectForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGroupDirective",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "formGroupDirective",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 9,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "FormEnabledDirective",
            "id": "directive-FormEnabledDirective-eebe410189ee59f81f14897c2d3b8f17ff5bc56c93f072f02d3c1e3106bba32021aebd10b1ce413c60b33d1c65e2f8590de5372faf9aa8614989151f4b10c85f",
            "file": "src/app/directives/form-enabled.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { FormGroupDirective } from '@angular/forms';\n\n@Directive({\n  selector: '[appFormEnabled]',\n})\nexport class FormEnabledDirective {\n  @Input('appFormEnabled')\n  set data(val: boolean) {\n    if (val) {\n      this.formGroupDirective.form.enable();\n    } else {\n      this.formGroupDirective.form.disable();\n    }\n  }\n  constructor(private formGroupDirective: FormGroupDirective) {}\n}\n",
            "selector": "[appFormEnabled]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "appFormEnabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGroupDirective",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "formGroupDirective",
                        "type": "FormGroupDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 9,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-8759f3e1be85290a1fc5a2da05afcd744728c88b7b996b479216dbbddbbf71c8098f290607f34c2ab3d946c1072be6704729868928e064cfa86db29b8bb09f16",
            "file": "src/app/pages/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [
                "./about.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n})\nexport class AboutComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n    max-width: 300px;\n}",
                    "styleUrl": "./about.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<mat-card>\n  <mat-card-header>\n    <mat-card-title>Wunschzettel</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <p>\n      Version 28\n    </p>\n    <p>\n      powered by<br>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\">\n        <g fill=\"#2e2e2e\">\n          <path\n            d=\"M12.159 19.592c-2.476-2.171-4.574-3.977-4.663-4.012-.09-.036-1.496.103-3.127.308-1.63.205-3.114.373-3.297.373-.33 0-.335-.023-.722-3.65-.213-2.007-.37-3.667-.348-3.688.076-.073 8.792-1.23 9.267-1.23.37 0 .674.177 1.406.82.513.452 3.073 2.678 5.69 4.948 2.616 2.27 4.793 4.187 4.837 4.26.06.1-3.255 4.366-4.375 5.628-.135.152-1.058-.59-4.668-3.757zM28.73 14.5a583.493 583.493 0 0 1-4.583-4.434l-2.41-2.36-4.042-.102-4.043-.102V5.15c0-1.294.042-2.959.093-3.701L13.838.1l5.617.07 5.616.07.3.422c.457.643 5.453 5.667 8.074 8.12 1.28 1.198 2.333 2.219 2.339 2.269.009.073-3.37 3.91-4.565 5.184l-.316.337-2.173-2.073zM48.055 12.757a601.664 601.664 0 0 1-3.94-4.494l-.352-.426-2.962-.216a312.396 312.396 0 0 0-3.107-.217c-.136-.002.29-7.242.435-7.392.11-.114 9.023.6 9.187.736.25.209 9.557 10.856 9.6 10.983.031.093-3.737 3.76-4.893 4.762l-.382.331-3.586-4.067zM34.244 22.456c-3.137.01-5.328.245-7.968.859-6.78 1.575-13.096 5.623-16.91 10.842-4.482 6.132-5.377 13.467-2.415 19.828 1.66 3.567 3.525 5.58 6.685 7.217 2.525 1.309 7.143 2.411 11.51 2.749 1.789.138 10.116-.038 11.918-.253C45.24 62.696 55.509 60.338 64 56.86c.001-.123-2.248-6.775-2.323-6.87-.017-.021-1.231.382-2.697.896-6.467 2.267-12.933 3.934-18.91 4.877-10.646 1.679-19.683.849-24.53-2.255-1.068-.684-1.393-1.096-2.225-2.797-.855-1.748-1.116-3.003-1.034-4.96.11-2.631.85-4.437 2.922-7.114 2.947-3.806 6.99-6.485 11.737-7.777 4.773-1.3 10.613-1.223 16.042.212 2.388.631 3.572 1.137 4.688 2.005.597.463 1.63 1.724 1.504 1.835-.028.024-6.746 1.894-14.93 4.153a6779.731 6779.731 0 0 0-14.902 4.121c-.011.01.402 1.655.918 3.66l.937 3.644 16.854-4.765c9.27-2.621 17.373-4.88 18.009-5.017l1.154-.25.115-.95c.222-1.86.129-4.194-.218-5.455-1.373-4.992-6.14-8.808-13.066-10.457-3.408-.811-6.32-1.15-9.801-1.14zM58.796 53.54l1.258 4.012-.46.152-.137-.433a1.062 1.062 0 0 1-.249.508c-.12.131-.283.23-.49.299a1.032 1.032 0 0 1-.96-.141c-.3-.208-.521-.54-.664-.994-.142-.454-.15-.854-.025-1.203.127-.35.359-.583.698-.695.207-.07.395-.084.569-.05a.983.983 0 0 1 .488.26l-.488-1.563.46-.152zm2.78.244c.217-.012.42.034.608.14.303.17.525.467.67.894l.078.23-2.1.755c.13.317.306.53.532.64.228.108.495.106.798 0 .176-.063.336-.143.485-.246.151-.104.292-.23.424-.377l.15.445c-.139.13-.289.246-.448.345a2.65 2.65 0 0 1-.505.244c-.444.16-.84.153-1.19-.02s-.6-.488-.754-.942c-.159-.469-.16-.884-.008-1.246.153-.365.438-.623.856-.773.14-.05.274-.079.404-.086zm-.02.43c-.078 0-.16.022-.245.053-.255.09-.434.238-.538.442-.102.203-.12.446-.053.724l1.632-.589c-.09-.256-.232-.436-.421-.54a.684.684 0 0 0-.374-.089zm-3.287 1.15a.842.842 0 0 0-.265.043.715.715 0 0 0-.483.488c-.076.244-.06.541.05.89.11.35.265.6.466.753a.694.694 0 0 0 .67.106.72.72 0 0 0 .482-.488c.078-.246.062-.545-.047-.894-.11-.349-.267-.598-.469-.75a.7.7 0 0 0-.404-.149zm-4.058.901c.075 0 .149 0 .22.01l.125.454a1.836 1.836 0 0 0-.909.041c-.231.068-.394.154-.49.261a.384.384 0 0 0-.082.38c.031.11.098.186.198.226.1.038.282.05.547.034l.17-.01c.351-.024.614.01.79.104.176.09.296.256.362.494a.805.805 0 0 1-.137.735c-.163.219-.427.382-.792.488a2.688 2.688 0 0 1-.488.092 3.832 3.832 0 0 1-.555.017l-.136-.496c.197.042.386.062.566.06.18 0 .35-.03.513-.078.22-.064.377-.15.474-.262a.396.396 0 0 0 .087-.382c-.036-.13-.107-.217-.212-.261-.104-.045-.308-.057-.614-.037l-.173.01c-.306.022-.542-.012-.706-.103-.164-.093-.275-.254-.337-.48-.076-.275-.042-.513.106-.718.148-.205.397-.358.745-.46.172-.05.337-.085.496-.103.08-.01.156-.013.232-.014zm-2.508.707l.737 2.938-.469.126-.114-.45c-.07.208-.167.374-.296.502a1.083 1.083 0 0 1-.49.267c-.329.087-.604.047-.826-.118-.223-.164-.385-.448-.486-.853l-.446-1.777.469-.127.44 1.764c.07.278.175.47.315.583.14.11.317.139.528.083.253-.067.43-.203.535-.408.106-.206.125-.451.053-.738l-.418-1.669.468-.123zm-2.956.79l-.114 3.133-.558.126-1.144-2.286-.097 2.57-.558.127-1.392-2.789.474-.109 1.088 2.177.092-2.447.555-.126 1.09 2.177.09-2.447.474-.106zm7.762.227l.192.657-.53.167-.195-.66.533-.164zm-13.022.867c.27 0 .51.079.714.241.273.215.45.544.53.988l.042.241-2.19.414c.081.334.225.574.432.718.21.142.471.183.787.124.183-.035.356-.091.519-.17.164-.079.324-.183.477-.307l.08.465a2.865 2.865 0 0 1-.493.27c-.173.073-.351.126-.536.16-.462.088-.853.02-1.174-.206-.318-.226-.52-.576-.605-1.048-.087-.489-.029-.9.176-1.235.205-.337.527-.547.962-.63a1.52 1.52 0 0 1 .279-.025zm-.03.425c-.055 0-.112.01-.171.017-.266.05-.464.168-.597.353-.131.185-.185.419-.159.704l1.699-.325c-.052-.267-.163-.467-.335-.6a.69.69 0 0 0-.438-.15z\" />\n          <path\n            d=\"M42.564 60.13c0-.25.543-.735.825-.735.29 0 .81.513.63.62-.283.17-1.455.261-1.455.115zM58.114 57.43c-.17-.123-.385-.483-.477-.8-.147-.504-.135-.61.094-.872.335-.382.738-.315 1.097.182.36.5.372 1.252.022 1.515-.328.247-.36.246-.736-.026zM60.781 55.023c.062-.447.73-.842 1.06-.628.41.266.355.443-.198.628-.293.098-.617.215-.72.259-.132.055-.175-.022-.142-.26z\" />\n        </g>\n        <path d=\"M326.25 25.7c103.294 4.702 242.479-14.123 417.625-77.25\"\n          style=\"line-height:normal;-inkscape-font-specification:Sans;text-indent:0;text-align:start;text-decoration-line:none;text-transform:none;block-progression:tb;marker:none\"\n          color=\"#000\" font-weight=\"400\" font-family=\"Sans\" overflow=\"visible\" fill=\"none\" />\n      </svg>\n    </p>\n  </mat-card-content>\n  <mat-card-actions align=\"end\">\n    <a mat-flat-button color=\"primary\" routerLink=\"/\">Zur Startseite</a>\n  </mat-card-actions>\n</mat-card>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-cd078729ab31a045bc3b31599a21092d2a6806a22f0c6f2fbafe4a6585410ccbf88ee94df513110401b44e841535f0d5cca4f229173efaadbb3030bca5ed6923",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-frame></app-frame>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CategoriesPageComponent",
            "id": "component-CategoriesPageComponent-62c5f19bdab72ef66f40d92f69fc6ae21ad6f34a90959db7c7f3070ce31949e289a74cc1582804eb25cccccba62e3a98bbb4e0e8d30cb8d4ee3cb9db010287d8",
            "file": "src/app/pages/categories-page/categories-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-categories-page",
            "styleUrls": [
                "./categories-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./categories-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories$",
                    "defaultValue": "this.store.select(selectCategories)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "hasRequestError$",
                    "defaultValue": "this.store.select(selectHasRequestError)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "hasRequestPending$",
                    "defaultValue": "this.store.select(selectHasPendingRequest)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "goToCategory",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  selectHasPendingRequest,\n  selectHasRequestError,\n} from 'src/app/store/a.selectors';\nimport { goToCategory } from 'src/app/store/w.actions';\nimport { selectCategories } from 'src/app/store/w.selectors';\n\n@Component({\n  selector: 'app-categories-page',\n  templateUrl: './categories-page.component.html',\n  styleUrls: ['./categories-page.component.scss'],\n})\nexport class CategoriesPageComponent {\n  categories$ = this.store.select(selectCategories);\n  hasRequestPending$ = this.store.select(selectHasPendingRequest);\n  hasRequestError$ = this.store.select(selectHasRequestError);\n\n  constructor(private store: Store) {}\n\n  public goToCategory(category: string): void {\n    this.store.dispatch(\n      goToCategory({\n        category,\n      })\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  padding: 20px;\n}\n\nmat-card {\n  cursor: pointer;\n}",
                    "styleUrl": "./categories-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-error-display></app-error-display>\n<mat-spinner class=\"centerbox\" *ngIf=\"(hasRequestPending$ | async)\"></mat-spinner>\n<ng-container *ngIf=\"false === (hasRequestPending$ | async) && false === (hasRequestError$ | async)\">\n  <mat-card class=\"c\" *ngFor=\"let category of (categories$ | async)\" (click)=\"goToCategory(category)\">{{ category }}</mat-card>\n  <app-empty-list *ngIf=\"((categories$ | async)?.length ?? 0) === 0\"></app-empty-list>\n</ng-container>\n"
        },
        {
            "name": "CategoryPageComponent",
            "id": "component-CategoryPageComponent-1879c123fd5a0836d966ee78cb4c07ce826e337787f5e68515e2a83eec4e7cae252cc3e336c8ccd31eff9f64cf409a1ae1d948d6bae664e114659ece48310c76",
            "file": "src/app/pages/category-page/category-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-category-page",
            "styleUrls": [
                "./category-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./category-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeCategory$",
                    "defaultValue": "EMPTY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "hasRequestPending$",
                    "defaultValue": "this.store.select(selectHasPendingRequest)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "items$",
                    "defaultValue": "this.store.select(selectItems)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { EMPTY, map, Observable } from 'rxjs';\nimport { selectHasPendingRequest } from 'src/app/store/a.selectors';\nimport { selectItems } from 'src/app/store/w.selectors';\n\n@Component({\n  selector: 'app-category-page',\n  templateUrl: './category-page.component.html',\n  styleUrls: ['./category-page.component.scss'],\n})\nexport class CategoryPageComponent implements OnInit {\n  hasRequestPending$ = this.store.select(selectHasPendingRequest);\n  activeCategory$: Observable<string | null> = EMPTY;\n  items$ = this.store.select(selectItems);\n\n  constructor(private route: ActivatedRoute, private store: Store) {}\n\n  ngOnInit(): void {\n    this.activeCategory$ = this.route.paramMap.pipe(\n      map((params: ParamMap) => params.get('category'))\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./category-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-spinner class=\"centerbox\" *ngIf=\"(hasRequestPending$ | async)\"></mat-spinner>\n<ng-container *ngIf=\"false === (hasRequestPending$ | async)\">\n  <app-item-preview *ngFor=\"let item of ((items$ | async) | withCategory:(activeCategory$|async) )\" [item]=\"item\"></app-item-preview>\n</ng-container>\n"
        },
        {
            "name": "EditReservationComponent",
            "id": "component-EditReservationComponent-2e17a2f5ffe358bf2a3a36e130129b22dc1b10288b23690a9bf35993063149a022162d140293cc7af8cbbc5a1926f77e75e7252ec0bb13ef744b1a5923415890",
            "file": "src/app/components/edit-reservation/edit-reservation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-reservation",
            "styleUrls": [
                "./edit-reservation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-reservation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "reservationErrorText$",
                    "defaultValue": "this.store.select(selectReservationErrorText)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "reservationStatus$",
                    "defaultValue": "this.store.select(selectReservationState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  selectReservationErrorText,\n  selectReservationState,\n} from 'src/app/store/r.selectors';\n\n@Component({\n  selector: 'app-edit-reservation',\n  templateUrl: './edit-reservation.component.html',\n  styleUrls: ['./edit-reservation.component.scss'],\n})\nexport class EditReservationComponent {\n  reservationStatus$ = this.store.select(selectReservationState);\n  reservationErrorText$ = this.store.select(selectReservationErrorText);\n\n  constructor(private store: Store) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".amber {\n  background-color: #f7e3aa;\n  color: #553102;\n}\n\n.green {\n  background-color: rgb(162, 253, 162);\n  color: rgb(3, 119, 3);\n}",
                    "styleUrl": "./edit-reservation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div [ngSwitch]=\"reservationStatus$ | async\">\n  <!-- requestPending -->\n  <mat-spinner *ngSwitchCase=\"'requestPending'\" mode=\"indeterminate\"></mat-spinner>\n  <!-- Fehler -->\n  <div *ngSwitchCase=\"'updateFailed'\" class=\"error\">\n    <p>\n      <mat-icon aria-hidden=\"false\" aria-label=\"Reserviert\">heart_broken</mat-icon>\n      Da ist etwas schiefgelaufen.\n    </p>\n    <p>\n      {{ reservationErrorText$ | async }}\n    </p>\n  </div>\n  <!-- reserved -->\n  <div *ngSwitchCase=\"'reserved'\" class=\"amber\">\n    <mat-icon aria-hidden=\"false\" aria-label=\"Reserviert\">warning_amber</mat-icon>\n    Es liegt bereits eine Reservierung vor.\n  </div>\n  <!-- free / unreserved / clear -->\n  <div *ngSwitchCase=\"'free'\" class=\"green\">\n    <mat-icon aria-hidden=\"false\" aria-label=\"Frei\">check_circle</mat-icon>\n    Es liegt keine Reservierung vor.\n  </div>\n</div>"
        },
        {
            "name": "EditReservationStubComponent",
            "id": "component-EditReservationStubComponent-a333109f8e7c79e6cd941d5b9fa4dafc3dd32fa1ebbe1eaf9c0fa58df5889becc5acc98e9cb6b6c50fc66aede2bc2054d4da9f84655bcf000d43d7424b117eee",
            "file": "testing/stubs/edit-reservation.stub.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-reservation",
            "styleUrls": [],
            "styles": [],
            "template": "<div>app-edit-reservation</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-reservation',\n  template: '<div>app-edit-reservation</div>',\n})\nexport class EditReservationStubComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            }
        },
        {
            "name": "EmptyListComponent",
            "id": "component-EmptyListComponent-773f2b58636fc00eca1423c76063705e6960ef6fc62e4c31e2efbead0b8d5b2fa58f37f14925fcbf32b393453d125c2c06593a303504ce26d3b706065906a425",
            "file": "src/app/components/empty-list/empty-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-empty-list",
            "styleUrls": [
                "./empty-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./empty-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-list',\n  templateUrl: './empty-list.component.html',\n  styleUrls: ['./empty-list.component.scss'],\n})\nexport class EmptyListComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./empty-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<mat-card class=\"empty\">\n  Alle Wünsche erfüllt?\n  <mat-card-actions>\n    <a [routerLink]=\"['/add']\" mat-flat-button color=\"primary\">\n      Neuer Eintrag\n    </a>\n  </mat-card-actions>\n</mat-card>"
        },
        {
            "name": "EmptyListStubComponent",
            "id": "component-EmptyListStubComponent-bcfff57996eaad7d9d6a38a378511da22a53ed338088f6229fca6773a6bea8b42778e70ee6742185266562556da0c922fa8b76c2607cbd184f1d096b9b55a179",
            "file": "testing/stubs/empty-list.stub.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-empty-list",
            "styleUrls": [],
            "styles": [],
            "template": "<div>app-empty-list</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-list',\n  template: '<div>app-empty-list</div>',\n})\nexport class EmptyListStubComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            }
        },
        {
            "name": "ErrorDisplayComponent",
            "id": "component-ErrorDisplayComponent-0d75a7097f9503be567fe176ae62f0c08428372a0d031cae117276e1823e6576dbb2f3047d4052833583aa4d90d541b798d7b28b351e03547f400e7f24ed4769",
            "file": "src/app/components/error-display/error-display.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-display",
            "styleUrls": [
                "./error-display.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-display.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error$",
                    "defaultValue": "this.store.select(selectRequestError)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "hasRequestError$",
                    "defaultValue": "this.store.select(selectHasRequestError)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  selectHasRequestError,\n  selectRequestError,\n} from 'src/app/store/a.selectors';\n\n@Component({\n  selector: 'app-error-display',\n  templateUrl: './error-display.component.html',\n  styleUrls: ['./error-display.component.scss'],\n})\nexport class ErrorDisplayComponent {\n  hasRequestError$ = this.store.select(selectHasRequestError);\n  error$ = this.store.select(selectRequestError);\n\n  constructor(private store: Store) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n  // Read the 500 hue from the primary color palette.\n  background-color: #f44336;\n  color: white;\n}",
                    "styleUrl": "./error-display.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ng-container *ngIf=\"hasRequestError$|async\">\n  <mat-card *ngIf=\"error$ | async as errorData\">\n    <mat-card-title>Fehler</mat-card-title>\n    <mat-card-content>\n      {{ errorData.text }}\n    </mat-card-content>\n    <mat-card-actions *ngIf=\"errorData.retryAction\">\n      <button mat-button>Wiederholen</button>\n    </mat-card-actions>\n  </mat-card>\n</ng-container>"
        },
        {
            "name": "ErrorDisplayStubComponent",
            "id": "component-ErrorDisplayStubComponent-d566de124f1063709371fd5ac871d9b25e03b6e43273abc99a5acc9298c3094f0667e8bc9235244de53d913e7bd49c59fc00b512142c760a021860affbce7243",
            "file": "testing/stubs/error-display.stub.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-display",
            "styleUrls": [],
            "styles": [],
            "template": "<div>app-error-display</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-error-display',\n  template: '<div>app-error-display</div>',\n})\nexport class ErrorDisplayStubComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            }
        },
        {
            "name": "FrameComponent",
            "id": "component-FrameComponent-7b6ae25badd7c2ddb9efc3e591915adadeade50bc986b975dc43440cac22a067bab2f25a4d3a14b0ca5473df913b43f3fd84e1503702f311026fb2efeac69211",
            "file": "src/app/frame/frame.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-frame",
            "styleUrls": [
                "./frame.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./frame.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "drawer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSidenav | undefined",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'drawer'"
                        }
                    ]
                },
                {
                    "name": "isHandset$",
                    "defaultValue": "this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prepareRoute",
                    "args": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { NavigationEnd, Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map, shareReplay, withLatestFrom } from 'rxjs/operators';\nimport { slideInAnimation } from '../animations';\n\n@Component({\n  selector: 'app-frame',\n  templateUrl: './frame.component.html',\n  styleUrls: ['./frame.component.scss'],\n  animations: [\n    slideInAnimation\n  ]\n\n})\nexport class FrameComponent implements OnInit {\n  @ViewChild('drawer') drawer: MatSidenav | undefined;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.router.events\n      .pipe(\n        withLatestFrom(this.isHandset$),\n        filter(([a, b]) => b && a instanceof NavigationEnd)\n      )\n      .subscribe((_) => this.drawer?.close());\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet?.activatedRouteData?.['animation'];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n",
                    "styleUrl": "./frame.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menü</mat-toolbar>\n    <app-menu-navlist></app-menu-navlist>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Wunschzettel</span>\n    </mat-toolbar>\n    <div [@routeAnimations]=\"prepareRoute(outlet)\">\n      <router-outlet #outlet=\"outlet\"></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ItemDisplayComponent",
            "id": "component-ItemDisplayComponent-c070745a9848552710415e48ee1f25088f56ca0f86bcde2afdc2687f0ce899765642799cf07410d7ae0205caeb3e167d01dbd5c4d5545bff842f018f9ee79bb7",
            "file": "src/app/components/item-display/item-display.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-display",
            "styleUrls": [
                "./item-display.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-display.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "WishlistItem | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { WishlistItem } from 'src/app/business/item';\n\n@Component({\n  selector: 'app-item-display',\n  templateUrl: './item-display.component.html',\n  styleUrls: ['./item-display.component.scss'],\n})\nexport class ItemDisplayComponent {\n  @Input()\n  item: WishlistItem | null = null;\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card-content {\n  padding-top: 6px;\n\n  img {\n    margin-left: 3px;\n    max-width: 200px;\n    width: auto;\n    height: auto;\n  }\n}\n",
                    "styleUrl": "./item-display.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<mat-card>\n  <mat-card-title-group>\n    <mat-card-title>{{ item?.Title }}</mat-card-title>\n    <mat-card-subtitle>{{ item?.Category }}</mat-card-subtitle>\n  </mat-card-title-group>\n  <mat-divider inset></mat-divider>\n  <mat-card-content>\n    <div class=\"f\">\n      <p>\n        {{ item?.Description }}\n      </p>\n      <div>\n        <img mat-card-lg-image\n          [src]=\"item?.ImgageUrl\" />\n      </div>\n    </div>\n    <div>\n      Kauf-Adresse:\n      <a [href]=\"item?.BuyUrl\">\n        {{ item?.BuyUrl }}\n      </a>\n    </div>\n  </mat-card-content>\n  <mat-divider inset></mat-divider>\n  <mat-card-actions>\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>Reservieren und Status</mat-panel-title>\n      </mat-expansion-panel-header>\n      <app-edit-reservation></app-edit-reservation>\n    </mat-expansion-panel>\n    <div class=\"f mt24\">\n      <button mat-flat-button color=\"accent\">Bearbeiten</button>\n      <div class=\"spacer\"></div>\n      <button mat-flat-button color=\"primary\">Zurück</button>\n    </div>\n    </mat-card-actions>\n    <mat-card-footer>\n  </mat-card-footer>\n</mat-card>"
        },
        {
            "name": "ItemDisplayStubComponent",
            "id": "component-ItemDisplayStubComponent-1980deaf5bd9d1f9b00693fe5ccd72385fe22eb8d134dd84710ee1e1367cebb6fef2d54d17d796a0869b9367f6e237b0c14a634e9813b37b66be93024cdd1c05",
            "file": "testing/stubs/item-display.stub.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-display",
            "styleUrls": [],
            "styles": [],
            "template": "<div>app-item-display</div>    <div class=\"title\">{{ item?.Title }}</div>\n    <div class=\"category\">{{ item?.Category }}</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "WishlistItem | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { WishlistItem } from 'src/app/business/item';\n\n@Component({\n  selector: 'app-item-display',\n  template: `<div>app-item-display</div>\n    <div class=\"title\">{{ item?.Title }}</div>\n    <div class=\"category\">{{ item?.Category }}</div> `,\n})\nexport class ItemDisplayStubComponent {\n  @Input()\n  item: WishlistItem | null = null;\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            }
        },
        {
            "name": "ItemFormComponent",
            "id": "component-ItemFormComponent-265b0059880271c759d65c86b91a845e3e8b9ed0043ce8b05b7ac855baffcf3295be3de1f44ce8ce78e0ff00cae9dafbc46a463dc20d028f78ac1f2e9a0e4fd0",
            "file": "src/app/components/item-form/item-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-form",
            "styleUrls": [
                "./item-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "captchaChallengeText$",
                    "defaultValue": "this.store.select(selectCaptchaRequestText)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "formData$",
                    "defaultValue": "this.store.select(selectActiveItemAsFormData)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "hasRequestPending$",
                    "defaultValue": "this.store.select(selectHasPendingRequest)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "itemForm",
                    "defaultValue": "this.fb.group({\n    title: ['', Validators.required],\n    description: [''],\n    category: ['', Validators.required],\n    imagesrc: [''],\n    buyurl: [''],\n    captchaResponse: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "requestError$",
                    "defaultValue": "this.store.select(selectRequestErrorText)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { animate, style, transition, trigger } from '@angular/animations';\nimport { Component } from '@angular/core';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport {\n  selectCaptchaRequestText,\n  selectHasPendingRequest,\n  selectRequestErrorText,\n} from 'src/app/store/a.selectors';\nimport { selectActiveItemAsFormData } from 'src/app/store/w.selectors';\n\n@Component({\n  selector: 'app-item-form',\n  templateUrl: './item-form.component.html',\n  styleUrls: ['./item-form.component.scss'],\n  animations: [\n    trigger('alertHighlightTrigger', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('80ms', style({ opacity: 1 })),\n        animate('80ms', style({ opacity: 0 })),\n        animate('80ms', style({ opacity: 1 })),\n        animate('80ms', style({ opacity: 0 })),\n        animate('80ms', style({ opacity: 1 })),\n        animate('80ms', style({ opacity: 0 })),\n        animate('80ms', style({ opacity: 1 })),\n      ]),\n    ]),\n  ],\n})\nexport class ItemFormComponent {\n  itemForm = this.fb.group({\n    title: ['', Validators.required],\n    description: [''],\n    category: ['', Validators.required],\n    imagesrc: [''],\n    buyurl: [''],\n    captchaResponse: ['', Validators.required],\n  });\n\n  hasRequestPending$ = this.store.select(selectHasPendingRequest);\n  formData$ = this.store.select(selectActiveItemAsFormData);\n  requestError$ = this.store.select(selectRequestErrorText);\n  captchaChallengeText$ = this.store.select(selectCaptchaRequestText);\n\n  constructor(private fb: UntypedFormBuilder, private store: Store) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-form-field {\n  width: 100%;\n}",
                    "styleUrl": "./item-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<form [formGroup]=\"itemForm\" [appFormEnabled]=\"(hasRequestPending$ | async) === false\"\n  [appConnectForm]=\"formData$ | async\">\n  <mat-card>\n    <mat-card-title>Wunschzetteleintrag</mat-card-title>\n\n    <mat-card-content>\n      <mat-form-field>\n        <mat-label>Bezeichnung</mat-label>\n        <input matInput formControlName=\"title\" />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Beschreibung</mat-label>\n        <textarea matInput formControlName=\"description\"></textarea>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Kategorie</mat-label>\n        <input matInput formControlName=\"category\" />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Bild-Adresse</mat-label>\n        <input matInput formControlName=\"imagesrc\" />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Kauf-Adresse</mat-label>\n        <input matInput formControlName=\"buyurl\" />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ captchaChallengeText$ | async }}</mat-label>\n        <input matInput formControlName=\"captchaResponse\" />\n        <mat-hint align=\"start\">Bitte als Zahl eingeben.</mat-hint>\n      </mat-form-field>\n\n      <mat-progress-bar mode=\"indeterminate\" *ngIf=\"hasRequestPending$ | async\"></mat-progress-bar>\n      <div *ngIf=\"requestError$ | async\">\n        <p @alertHighlightTrigger class=\"error\">\n          Fehler: {{ requestError$ | async }}\n        </p>\n        <button mat-flat-button color=\"primary\">Neue Aufgabe abrufen</button>\n      </div>\n\n    </mat-card-content>\n\n    <mat-card-actions>\n      <div class=\"f\">\n        <button mat-flat-button color=\"accent\">zurück</button>\n        <div class=\"spacer\"></div>\n        <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"itemForm.invalid\">\n          Speichern\n        </button>\n      </div>\n    </mat-card-actions>\n  </mat-card>\n</form>\n"
        },
        {
            "name": "ItemPreviewComponent",
            "id": "component-ItemPreviewComponent-4188b238229a84db5bfe28b7f720c2d22c2b69371b003b90f19b6caaab217987cb78e8a8e538412e1276ce5cc8be0713df00adb49748746cd993612e5e722b83",
            "file": "src/app/components/item-preview/item-preview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-preview",
            "styleUrls": [
                "./item-preview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-preview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "WishlistItem | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { WishlistItem } from 'src/app/business/item';\nimport { goToItem } from 'src/app/store/w.actions';\n\n@Component({\n  selector: 'app-item-preview',\n  templateUrl: './item-preview.component.html',\n  styleUrls: ['./item-preview.component.scss'],\n})\nexport class ItemPreviewComponent {\n  @Input()\n  item: WishlistItem | null = null;\n\n  constructor(private store: Store) {}\n\n  public goToItem(): void {\n    if (this.item) {\n      this.store.dispatch(goToItem({ itemId: this.item.id }));\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".preview img,\n.preview .no-img {\n    height: 72px;\n    width: 72px;\n    float: left;\n    margin-right: 5px;\n    object-fit: cover;\n}\n\n.preview {\n    display: -webkit-box;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    display: -webkit-box;\n    word-break: 'none';\n    hyphens: auto;\n}",
                    "styleUrl": "./item-preview.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-card *ngIf=\"item\" (click)=\"goToItem()\">\n  <mat-card-title-group>\n    <mat-card-title>{{ item.Title }}</mat-card-title>\n    <mat-card-subtitle>{{ item.Category }}</mat-card-subtitle>\n  </mat-card-title-group>\n  <mat-divider inset></mat-divider>\n  <mat-card-content class=\"preview\">\n    <div class=\"desc\">\n      <img [src]=\"item.ImgageUrl\" *ngIf=\"item.ImgageUrl\" />\n      <span class=\"no-img\" *ngIf=\"!item.ImgageUrl\"></span>\n      {{ item.Description }}\n    </div>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "ItemPreviewStubComponent",
            "id": "component-ItemPreviewStubComponent-f2266fb93730542b8cc87537050c6e52c2bf3f90549eba853daff083291f908ec1fc11897e3d982d8644405b2b803c375c61d26228221e1d88776335f0b62f17",
            "file": "testing/stubs/item-preview.stub.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-preview",
            "styleUrls": [],
            "styles": [],
            "template": "<div>app-item-preview</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "WishlistItem | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { WishlistItem } from 'src/app/business/item';\n\n@Component({\n  selector: 'app-item-preview',\n  template: '<div>app-item-preview</div>',\n})\nexport class ItemPreviewStubComponent {\n  @Input()\n  item: WishlistItem | null = null;\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            }
        },
        {
            "name": "ItemViewComponent",
            "id": "component-ItemViewComponent-623e9e649f159392ab78314cc38efef2313f535e8a11886ab8fdd98829ce8111715c1a39d588e268a690da080d5dc2aa31d58782758015fca9be2dd3914f923f",
            "file": "src/app/pages/item-view/item-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-view",
            "styleUrls": [
                "./item-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hasRequestPending$",
                    "defaultValue": "this.store.select(selectHasPendingRequest)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "item$",
                    "defaultValue": "this.store.select(selectActiveItem)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectHasPendingRequest } from 'src/app/store/a.selectors';\nimport { selectActiveItem } from 'src/app/store/w.selectors';\n\n@Component({\n  selector: 'app-item-view',\n  templateUrl: './item-view.component.html',\n  styleUrls: ['./item-view.component.scss'],\n})\nexport class ItemViewComponent {\n  hasRequestPending$ = this.store.select(selectHasPendingRequest);\n  item$ = this.store.select(selectActiveItem);\n  constructor(private store: Store) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./item-view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-spinner class=\"centerbox\" *ngIf=\"hasRequestPending$ | async\"></mat-spinner>\n<ng-container *ngIf=\"false === (hasRequestPending$ | async)\">\n  <app-item-display [item]=\"item$ | async\"></app-item-display>\n</ng-container>\n"
        },
        {
            "name": "MenuNavlistComponent",
            "id": "component-MenuNavlistComponent-6971c06c6061b385852a8e0af398ceca2e1232fe86159568dc3205432ba3de6e6961059babc6939e2aa9596a59eb55cdde379dd81951782c16be450feffbd3a9",
            "file": "src/app/components/menu-navlist/menu-navlist.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu-navlist",
            "styleUrls": [
                "./menu-navlist.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu-navlist.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories$",
                    "defaultValue": "this.store.select(selectCategories)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectCategories } from 'src/app/store/w.selectors';\n\n@Component({\n  selector: 'app-menu-navlist',\n  templateUrl: './menu-navlist.component.html',\n  styleUrls: ['./menu-navlist.component.scss'],\n})\nexport class MenuNavlistComponent {\n  categories$ = this.store.select(selectCategories);\n\n  constructor(private store: Store) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./menu-navlist.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-nav-list>\n  <mat-divider></mat-divider>\n  <a *ngFor=\"let category of (categories$ | async)\" mat-list-item [routerLink]=\"['/wunschliste', category]\">{{ category }}</a>\n  <mat-divider></mat-divider>\n  <a mat-list-item routerLink=\"/about\">Über</a>\n</mat-nav-list>\n"
        },
        {
            "name": "MenuNavlistStubComponent",
            "id": "component-MenuNavlistStubComponent-b3efb4de0b136eb53ba8dcc507d645e500f483b6ffb6cefa47b99c4ce31c29f20f3a234b4639f98cd2094aa70d2f9be434fbd1e0c5f2e74c537edd07b706c09c",
            "file": "testing/stubs/menu-navlist.stub.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu-navlist",
            "styleUrls": [],
            "styles": [],
            "template": "<div>app-menu-categories</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-navlist',\n  template: '<div>app-menu-categories</div>',\n})\nexport class MenuNavlistStubComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            }
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-a478094d44cb8172a8d93b2cca5aea86fc46be1648674e9915771758d706c3976a463b4a5df5b05d5ddcf591617c80ffd819ffb6e1ef39c07fd6419abdf3cf77",
            "file": "src/app/pages/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-not-found",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$bordercolor: #888;\n\ndiv {\n    align-items: flex-end;\n}\n\n.n {\n    font-size: 128px;\n        line-height: 140px;\n    border-right: 2px solid $bordercolor;\n}\n\n.t {\n    font-size: 40px;\n        line-height: 57px;\n    border-bottom: 2px solid $bordercolor;\n}",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"centerbox f\">\n    <span class=\"n\">404</span>\n    <span class=\"t\">Seite nicht gefunden</span>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-9f0c48b82bad061d60bde1226d899bfe66225f8ba2dcb90cd281dc18e87880b2960dc0f5cbcc172cea2dee5cfdd0f1e3a9ce89e8944a9f836e9e5bb7dfa938e9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { LayoutModule } from '@angular/cdk/layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport {\n  MatFormFieldModule,\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\n} from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EditReservationComponent } from './components/edit-reservation/edit-reservation.component';\nimport { EmptyListComponent } from './components/empty-list/empty-list.component';\nimport { ItemDisplayComponent } from './components/item-display/item-display.component';\nimport { ItemFormComponent } from './components/item-form/item-form.component';\nimport { ItemPreviewComponent } from './components/item-preview/item-preview.component';\nimport { ConnectFormDirective } from './directives/connect-form.directive';\nimport { FormEnabledDirective } from './directives/form-enabled.directive';\nimport { FrameComponent } from './frame/frame.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { CategoriesPageComponent } from './pages/categories-page/categories-page.component';\nimport { CategoryPageComponent } from './pages/category-page/category-page.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { agReducer } from './store/a.reducer';\nimport { AppState } from './store/app.state';\nimport { rReducer } from './store/r.reducer';\nimport { WishlistEffects } from './store/w.effects';\nimport { wReducer } from './store/w.reducer';\nimport { WithCategoryPipe } from './pipes/with-category.pipe';\nimport { MenuNavlistComponent } from './components/menu-navlist/menu-navlist.component';\nimport { ItemViewComponent } from './pages/item-view/item-view.component';\nimport { ErrorDisplayComponent } from './components/error-display/error-display.component';\n\n@NgModule({\n  declarations: [\n    AboutComponent,\n    AppComponent,\n    CategoriesPageComponent,\n    ConnectFormDirective,\n    EmptyListComponent,\n    FormEnabledDirective,\n    FrameComponent,\n    ItemDisplayComponent,\n    ItemFormComponent,\n    EditReservationComponent,\n    CategoryPageComponent,\n    ItemPreviewComponent,\n    PageNotFoundComponent,\n    WithCategoryPipe,\n    MenuNavlistComponent,\n    ItemViewComponent,\n    ErrorDisplayComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    StoreModule.forRoot<AppState>({\n      ag: agReducer,\n      wishlist: wReducer,\n      reservation: rReducer,\n    }),\n    EffectsModule.forRoot([WishlistEffects]),\n    // import HttpClientModule after BrowserModule.\n    HttpClientModule,\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: { appearance: 'fill' },\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CategoriesPageComponent"
                        },
                        {
                            "name": "CategoryPageComponent"
                        },
                        {
                            "name": "ConnectFormDirective"
                        },
                        {
                            "name": "EditReservationComponent"
                        },
                        {
                            "name": "EmptyListComponent"
                        },
                        {
                            "name": "ErrorDisplayComponent"
                        },
                        {
                            "name": "FormEnabledDirective"
                        },
                        {
                            "name": "FrameComponent"
                        },
                        {
                            "name": "ItemDisplayComponent"
                        },
                        {
                            "name": "ItemFormComponent"
                        },
                        {
                            "name": "ItemPreviewComponent"
                        },
                        {
                            "name": "ItemViewComponent"
                        },
                        {
                            "name": "MenuNavlistComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "WithCategoryPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-72b28d36020b5bd24932b0fe578375cbde45ca807a78bc36ed98b9806564228b458a318a9779dc9cf68561275b46f583770f698bc612a7ee61179938561e5c8c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './pages/about/about.component';\nimport { CategoriesPageComponent } from './pages/categories-page/categories-page.component';\nimport { CategoryPageComponent } from './pages/category-page/category-page.component';\nimport { ItemViewComponent } from './pages/item-view/item-view.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path: 'wunschliste',\n    component: CategoryPageComponent,\n    data: { animation: 'CategoryPage' },\n  },\n  {\n    path: 'wunschliste/:category',\n    component: CategoryPageComponent,\n    data: { animation: 'CategoryPage' },\n  },\n  {\n    path: 'wunsch/:wunsch',\n    component: ItemViewComponent,\n    data: { animation: 'CategoryPage' },\n  },\n  {\n    path: 'wunsch',\n    component: CategoriesPageComponent,\n    data: { animation: 'CategoriesPage' },\n  },\n  {\n    path: 'about',\n    component: AboutComponent,\n    data: { animation: 'AboutPage' },\n  },\n\n  { path: '', redirectTo: '/wunsch', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "agReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/a.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<AppGlobalState>(\n  initialState,\n  on(\n    getItems,\n    (state, _p): AppGlobalState => ({\n      ...state,\n      pendingRequest: true,\n    })\n  ),\n  on(\n    itemsLoaded,\n    (state, _p): AppGlobalState => ({\n      ...state,\n      pendingRequest: false,\n    })\n  ),\n  on(\n    requestFailure,\n    (state, p): AppGlobalState => ({\n      ...state,\n      pendingRequest: false,\n      requestErrorText: p.errorText,\n      requestRetryAction: p.retryAction ?? null,\n    })\n  )\n)"
            },
            {
                "name": "appStateStub",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "testing/app.state.builder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): AppStateBuilder => new AppStateBuilder()"
            },
            {
                "name": "Categories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Categories.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Category",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ConnectFormDirective, FormEnabledDirective]"
            },
            {
                "name": "decorators",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/matmetadata.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  moduleMetadata({\n    declarations: [],\n    imports: moduleImports,\n    providers: defaultProviders,\n  }),\n]"
            },
            {
                "name": "defaultProviders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/matmetadata.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[\n  { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n]"
            },
            {
                "name": "Display",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/About.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "Display",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EmptyList.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "Display",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemDisplay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {\n    item: WishlistItemBuilder.faust(),\n  },\n})"
            },
            {
                "name": "Display",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemView.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Display",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NotFound.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "EditForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Categories.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ErrorDisplay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "ErrorText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ErrorDisplay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "ErrorTextAndAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ErrorDisplay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Failure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Categories.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "getItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[W] Get items', props)"
            },
            {
                "name": "goToCategory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[W] Go to category',\n  props<{\n    category: string;\n  }>()\n)"
            },
            {
                "name": "goToItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[W] Go to item',\n  props<{\n    itemId: number;\n  }>()\n)"
            },
            {
                "name": "HasReservation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditReservation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Categories.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "appStateStub()"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "AppStateBuilder.withBookCategoryAndItems()"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemDisplay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "appStateStub()"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "appStateStub()"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemView.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "AppStateBuilder.withBookCategoryAndItems().withActiveItem()"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/a.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppGlobalState",
                "defaultValue": "{\n  captchaRequest: null,\n  pendingRequest: true,\n  requestErrorText: null,\n  requestRetryAction: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/r.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ReservationState",
                "defaultValue": "{\n  itemid: null,\n  status: 'unknown',\n  errorText: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "WishlistState",
                "defaultValue": "{\n  categories: [],\n  items: [],\n  activeItem: null,\n}"
            },
            {
                "name": "IsFree",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditReservation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "itemsLoaded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[W] Items loaded',\n  props<{\n    items: WishlistItem[];\n  }>()\n)"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Categories.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemView.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({})"
            },
            {
                "name": "LoadingUpdating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditReservation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "moduleImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/matmetadata.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[\n  BrowserAnimationsModule,\n  ReactiveFormsModule,\n  MatButtonModule,\n  MatCardModule,\n  MatDividerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatToolbarModule,\n]"
            },
            {
                "name": "NewForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "requestFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/a.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[W] Request requestFailure',\n  props<{\n    errorText: string;\n    errorDetails?: string;\n    retryAction?: Action;\n  }>()\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "rReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/r.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<ReservationState>(initialState)"
            },
            {
                "name": "SaveError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "Saving",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selectActiveItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: WishlistState) => state.activeItem\n)"
            },
            {
                "name": "selectActiveItemAsFormData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: WishlistState) => ({\n    title: state.activeItem?.Title,\n    description: state.activeItem?.Description,\n    category: state.activeItem?.Category,\n    imagesrc: state.activeItem?.ImgageUrl,\n    buyurl: state.activeItem?.BuyUrl,\n    id: state.activeItem?.id,\n  })\n)"
            },
            {
                "name": "selectCaptchaRequestText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/a.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => state.captchaRequest\n)"
            },
            {
                "name": "selectCategories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: WishlistState) => state.categories\n)"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/a.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: any) => (state as AppState).ag"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/r.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: any) => (state as AppState).reservation"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: any) => (state as AppState).wishlist"
            },
            {
                "name": "selectHasPendingRequest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/a.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => state.pendingRequest\n)"
            },
            {
                "name": "selectHasRequestError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/a.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => !!state.requestErrorText\n)"
            },
            {
                "name": "selectItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: WishlistState) => state.items\n)"
            },
            {
                "name": "selectRequestError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/a.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => ({\n    text: state.requestErrorText,\n    retryAction: state.requestRetryAction,\n  })\n)"
            },
            {
                "name": "selectRequestErrorText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/a.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => state.requestErrorText\n)"
            },
            {
                "name": "selectReservationErrorText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/r.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReservationState) => state.errorText\n)"
            },
            {
                "name": "selectReservationState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/r.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReservationState) => state.status\n)"
            },
            {
                "name": "slideInAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/animations.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('routeAnimations', [\n  transition('* <=> CategoriesPage, * <=> AboutPage', [\n    style({ position: 'relative' }),\n    query(':enter, :leave', [\n      style({\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n      }),\n    ]),\n    query(':enter', [style({ left: '-100%' })], { optional: true }),\n    group([\n      query(':leave', [animate('300ms ease-out', style({ left: '100%' }))], {\n        optional: true,\n      }),\n      query(':enter', [animate('300ms ease-out', style({ left: '0%' }))]),\n    ]),\n    query(':enter', animateChild()),\n  ]),\n])"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Categories.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CategoriesPageComponent>",
                "defaultValue": "(\n  args: CategoriesPageComponent\n) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CategoryPageComponent>",
                "defaultValue": "(\n  args: CategoryPageComponent\n) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ErrorDisplay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ErrorDisplayComponent>",
                "defaultValue": "(\n  args: ErrorDisplayComponent\n) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ItemFormComponent>",
                "defaultValue": "(args: ItemFormComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ItemView.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ItemViewComponent>",
                "defaultValue": "(args: ItemViewComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "UpdateFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditReservation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "wReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/w.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<WishlistState>(\n  initialState,\n  on(\n    itemsLoaded,\n    (state, p): WishlistState => ({\n      ...state,\n      categories: p.items\n        .map((i) => i.Category)\n        .reduce((a, c) => {\n          if (a.indexOf(c) === -1) {\n            a.push(c);\n          }\n          return a;\n        }, [] as string[])\n        .sort(),\n      items: p.items,\n    })\n  )\n)"
            }
        ],
        "functions": [
            {
                "name": "delayDuringTest",
                "file": "testing/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "ms",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Promise<void>",
                "jsdoctags": [
                    {
                        "name": "ms",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "randomNumber",
                "file": "testing/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "max",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "min",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0"
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "max",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "min",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "randomString",
                "file": "testing/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "length",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "prefix",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "''"
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "length",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "prefix",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "''",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "ReservationStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"unknown\" | \"requestPending\" | \"reserved\" | \"free\" | \"updateFailed\"",
                "file": "src/app/store/r.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/store/a.reducer.ts": [
                {
                    "name": "agReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/a.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<AppGlobalState>(\n  initialState,\n  on(\n    getItems,\n    (state, _p): AppGlobalState => ({\n      ...state,\n      pendingRequest: true,\n    })\n  ),\n  on(\n    itemsLoaded,\n    (state, _p): AppGlobalState => ({\n      ...state,\n      pendingRequest: false,\n    })\n  ),\n  on(\n    requestFailure,\n    (state, p): AppGlobalState => ({\n      ...state,\n      pendingRequest: false,\n      requestErrorText: p.errorText,\n      requestRetryAction: p.retryAction ?? null,\n    })\n  )\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/a.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppGlobalState",
                    "defaultValue": "{\n  captchaRequest: null,\n  pendingRequest: true,\n  requestErrorText: null,\n  requestRetryAction: null,\n}"
                }
            ],
            "testing/app.state.builder.ts": [
                {
                    "name": "appStateStub",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "testing/app.state.builder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): AppStateBuilder => new AppStateBuilder()"
                }
            ],
            "src/stories/Categories.stories.ts": [
                {
                    "name": "Categories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Categories.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Categories.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                },
                {
                    "name": "Failure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Categories.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Categories.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "appStateStub()"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Categories.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Categories.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CategoriesPageComponent>",
                    "defaultValue": "(\n  args: CategoriesPageComponent\n) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Category.stories.ts": [
                {
                    "name": "Category",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "AppStateBuilder.withBookCategoryAndItems()"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CategoryPageComponent>",
                    "defaultValue": "(\n  args: CategoryPageComponent\n) => ({\n  props: args,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/ItemForm.stories.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ConnectFormDirective, FormEnabledDirective]"
                },
                {
                    "name": "EditForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "appStateStub()"
                },
                {
                    "name": "NewForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                },
                {
                    "name": "SaveError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                },
                {
                    "name": "Saving",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ItemFormComponent>",
                    "defaultValue": "(args: ItemFormComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/matmetadata.ts": [
                {
                    "name": "decorators",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/matmetadata.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  moduleMetadata({\n    declarations: [],\n    imports: moduleImports,\n    providers: defaultProviders,\n  }),\n]"
                },
                {
                    "name": "defaultProviders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/matmetadata.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[\n  { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n]"
                },
                {
                    "name": "moduleImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/matmetadata.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[\n  BrowserAnimationsModule,\n  ReactiveFormsModule,\n  MatButtonModule,\n  MatCardModule,\n  MatDividerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatToolbarModule,\n]"
                }
            ],
            "src/stories/About.stories.ts": [
                {
                    "name": "Display",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/About.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/stories/EmptyList.stories.ts": [
                {
                    "name": "Display",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EmptyList.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/stories/ItemDisplay.stories.ts": [
                {
                    "name": "Display",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemDisplay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {\n    item: WishlistItemBuilder.faust(),\n  },\n})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemDisplay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "appStateStub()"
                }
            ],
            "src/stories/ItemView.stories.ts": [
                {
                    "name": "Display",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemView.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemView.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "AppStateBuilder.withBookCategoryAndItems().withActiveItem()"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemView.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ItemView.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ItemViewComponent>",
                    "defaultValue": "(args: ItemViewComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/NotFound.stories.ts": [
                {
                    "name": "Display",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NotFound.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/stories/ErrorDisplay.stories.ts": [
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ErrorDisplay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "ErrorText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ErrorDisplay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "ErrorTextAndAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ErrorDisplay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ErrorDisplay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ErrorDisplayComponent>",
                    "defaultValue": "(\n  args: ErrorDisplayComponent\n) => ({\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/store/w.actions.ts": [
                {
                    "name": "getItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[W] Get items', props)"
                },
                {
                    "name": "goToCategory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[W] Go to category',\n  props<{\n    category: string;\n  }>()\n)"
                },
                {
                    "name": "goToItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[W] Go to item',\n  props<{\n    itemId: number;\n  }>()\n)"
                },
                {
                    "name": "itemsLoaded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[W] Items loaded',\n  props<{\n    items: WishlistItem[];\n  }>()\n)"
                }
            ],
            "src/stories/EditReservation.stories.ts": [
                {
                    "name": "HasReservation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditReservation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                },
                {
                    "name": "IsFree",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditReservation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                },
                {
                    "name": "LoadingUpdating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditReservation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                },
                {
                    "name": "UpdateFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditReservation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/app/store/r.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/r.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReservationState",
                    "defaultValue": "{\n  itemid: null,\n  status: 'unknown',\n  errorText: null,\n}"
                },
                {
                    "name": "rReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/r.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<ReservationState>(initialState)"
                }
            ],
            "src/app/store/w.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WishlistState",
                    "defaultValue": "{\n  categories: [],\n  items: [],\n  activeItem: null,\n}"
                },
                {
                    "name": "wReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<WishlistState>(\n  initialState,\n  on(\n    itemsLoaded,\n    (state, p): WishlistState => ({\n      ...state,\n      categories: p.items\n        .map((i) => i.Category)\n        .reduce((a, c) => {\n          if (a.indexOf(c) === -1) {\n            a.push(c);\n          }\n          return a;\n        }, [] as string[])\n        .sort(),\n      items: p.items,\n    })\n  )\n)"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/store/a.actions.ts": [
                {
                    "name": "requestFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/a.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[W] Request requestFailure',\n  props<{\n    errorText: string;\n    errorDetails?: string;\n    retryAction?: Action;\n  }>()\n)"
                }
            ],
            "src/app/store/w.selectors.ts": [
                {
                    "name": "selectActiveItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: WishlistState) => state.activeItem\n)"
                },
                {
                    "name": "selectActiveItemAsFormData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: WishlistState) => ({\n    title: state.activeItem?.Title,\n    description: state.activeItem?.Description,\n    category: state.activeItem?.Category,\n    imagesrc: state.activeItem?.ImgageUrl,\n    buyurl: state.activeItem?.BuyUrl,\n    id: state.activeItem?.id,\n  })\n)"
                },
                {
                    "name": "selectCategories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: WishlistState) => state.categories\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: any) => (state as AppState).wishlist"
                },
                {
                    "name": "selectItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/w.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: WishlistState) => state.items\n)"
                }
            ],
            "src/app/store/a.selectors.ts": [
                {
                    "name": "selectCaptchaRequestText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/a.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => state.captchaRequest\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/a.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: any) => (state as AppState).ag"
                },
                {
                    "name": "selectHasPendingRequest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/a.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => state.pendingRequest\n)"
                },
                {
                    "name": "selectHasRequestError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/a.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => !!state.requestErrorText\n)"
                },
                {
                    "name": "selectRequestError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/a.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => ({\n    text: state.requestErrorText,\n    retryAction: state.requestRetryAction,\n  })\n)"
                },
                {
                    "name": "selectRequestErrorText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/a.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: AppGlobalState) => state.requestErrorText\n)"
                }
            ],
            "src/app/store/r.selectors.ts": [
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/r.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: any) => (state as AppState).reservation"
                },
                {
                    "name": "selectReservationErrorText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/r.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReservationState) => state.errorText\n)"
                },
                {
                    "name": "selectReservationState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/r.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectFeature,\n  (state: ReservationState) => state.status\n)"
                }
            ],
            "src/app/animations.ts": [
                {
                    "name": "slideInAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/animations.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('routeAnimations', [\n  transition('* <=> CategoriesPage, * <=> AboutPage', [\n    style({ position: 'relative' }),\n    query(':enter, :leave', [\n      style({\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n      }),\n    ]),\n    query(':enter', [style({ left: '-100%' })], { optional: true }),\n    group([\n      query(':leave', [animate('300ms ease-out', style({ left: '100%' }))], {\n        optional: true,\n      }),\n      query(':enter', [animate('300ms ease-out', style({ left: '0%' }))]),\n    ]),\n    query(':enter', animateChild()),\n  ]),\n])"
                }
            ]
        },
        "groupedFunctions": {
            "testing/utils.ts": [
                {
                    "name": "delayDuringTest",
                    "file": "testing/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "ms",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Promise<void>",
                    "jsdoctags": [
                        {
                            "name": "ms",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "randomNumber",
                    "file": "testing/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "max",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "min",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "max",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "min",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "randomString",
                    "file": "testing/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "prefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "prefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/store/r.state.ts": [
                {
                    "name": "ReservationStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"unknown\" | \"requestPending\" | \"reserved\" | \"free\" | \"updateFailed\"",
                    "file": "src/app/store/r.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "wunschliste",
                        "component": "CategoryPageComponent",
                        "data": {
                            "animation": "CategoryPage"
                        }
                    },
                    {
                        "path": "wunschliste/:category",
                        "component": "CategoryPageComponent",
                        "data": {
                            "animation": "CategoryPage"
                        }
                    },
                    {
                        "path": "wunsch/:wunsch",
                        "component": "ItemViewComponent",
                        "data": {
                            "animation": "CategoryPage"
                        }
                    },
                    {
                        "path": "wunsch",
                        "component": "CategoriesPageComponent",
                        "data": {
                            "animation": "CategoriesPage"
                        }
                    },
                    {
                        "path": "about",
                        "component": "AboutComponent",
                        "data": {
                            "animation": "AboutPage"
                        }
                    },
                    {
                        "path": "",
                        "redirectTo": "/wunsch",
                        "pathMatch": "full"
                    },
                    {
                        "path": "**",
                        "component": "PageNotFoundComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slideInAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/business/add-item-response.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AddItemResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/business/item.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WishlistItem",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/business/result.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Result",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/edit-reservation/edit-reservation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditReservationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/empty-list/empty-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/error-display/error-display.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorDisplayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item-display/item-display.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemDisplayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item-form/item-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item-preview/item-preview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemPreviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/menu-navlist/menu-navlist.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuNavlistComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/connect-form.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ConnectFormDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/form-enabled.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FormEnabledDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/frame/frame.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FrameComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/categories-page/categories-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoriesPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/category-page/category-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/item-view/item-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/with-category.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "WithCategoryPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/items.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ItemsService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "requestFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "agReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCaptchaRequestText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectHasPendingRequest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectHasRequestError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectRequestError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectRequestErrorText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/a.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppGlobalState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/r.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/r.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/r.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/r.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectReservationErrorText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/r.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectReservationState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/r.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ReservationState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "goToCategory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "goToItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itemsLoaded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WishlistEffects",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "wReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectActiveItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectActiveItemAsFormData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCategories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/w.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WishlistState",
                "coveragePercent": 50,
                "coverageCount": "2/4",
                "status": "medium"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/About.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Display",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Categories.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Categories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Categories.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Categories.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Failure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Categories.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Categories.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Categories.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Category.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Category",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Category.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Category.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Category.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditReservation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HasReservation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditReservation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IsFree",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditReservation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoadingUpdating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditReservation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UpdateFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EmptyList.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Display",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ErrorDisplay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ErrorDisplay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ErrorDisplay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorTextAndAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ErrorDisplay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemDisplay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Display",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemDisplay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NewForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SaveError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Saving",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemView.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Display",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemView.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemView.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ItemView.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NotFound.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Display",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/matmetadata.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "decorators",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/matmetadata.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultProviders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/matmetadata.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "moduleImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "testing/activated-route-stub.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ActivatedRouteStub",
                "coveragePercent": 60,
                "coverageCount": "3/5",
                "status": "good"
            },
            {
                "filePath": "testing/app.state.builder.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppStateBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "testing/app.state.builder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appStateStub",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "testing/item.builder.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WishlistItemBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "testing/list-builder.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ListBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "testing/stubs/edit-reservation.stub.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditReservationStubComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "testing/stubs/empty-list.stub.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyListStubComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "testing/stubs/error-display.stub.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorDisplayStubComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "testing/stubs/item-display.stub.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemDisplayStubComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "testing/stubs/item-preview.stub.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemPreviewStubComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "testing/stubs/menu-navlist.stub.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuNavlistStubComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "testing/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "delayDuringTest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "testing/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "randomNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "testing/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "randomString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}